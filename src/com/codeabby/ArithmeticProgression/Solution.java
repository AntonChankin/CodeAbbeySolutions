package com.codeabby.ArithmeticProgression;

import java.util.Scanner;

/**
 *
 * Sequences of values generated by some simple law are common objects in computational programming. We start practicing math branch of computer science with the simplest kind of such sequences.
 *
 * When we speak about arithmetic progression (or arithmetic sequence) we mean a series of values having special property - each value is followed by the other, greater by predefined amount (step).
 *
 * I.e. difference of (K+1)-th and K-th values is a constant.
 *
 * Since so, arithmetic sequence is completely defined by the first member (A) and the increment value - step size - (B). First few members could be expressed as
 *
 * A + (A + B) + (A + 2B) + (A + 3B) + ...
 * You are to calculate the sum of first members of arithmetic sequence. Wikipedia page on arithmetic progression could be of significant help to one who meets them for the first time.
 *
 * Input data: first line contains the number of test-cases.
 * Other lines contain test-cases in form of triplets of values A B N where A is the first value of the sequence, B is the step size and N is the number of first values which should be accounted.
 * Answer: you are to output results (sums of N first members) for each sequence, separated by spaces.
 */
public class Solution {

    public static int getNthValue(int firstValue, int stepSize, int n) {
        return firstValue + ((n - 1) * stepSize);
    }

    public static int calculateSum(int firstValue, int stepSize, int stepsToMake) {
        return (stepsToMake * (firstValue + getNthValue(firstValue,stepSize,stepsToMake))) / 2;
    }

    public static void main(String[] args) {
        StringBuilder result = new StringBuilder();
        System.out.println("data:");
        try {
            Scanner in = new Scanner(System.in);
            int n = in.nextInt();
            for (int i = 0; i < n; i++) {
                int firstValue = in.nextInt();
                int stepSize = in.nextInt();
                int stepsToMake = in.nextInt();
                int sum = calculateSum(firstValue, stepSize, stepsToMake);
                result.append(sum).append(' ');
            }

        }
        catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println("answer:");
        System.out.println(result);
    }

}
